[{"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\index.js":"1","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\App.js":"2","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\hooks\\index.js":"3","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\hooks\\useInput.js":"4","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\hooks\\useLocalStorage.js":"5","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\pages\\index.js":"6","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\index.js":"7","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\CurrentWeather.js":"8","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\SearchInput.js":"9","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\pages\\Weather.js":"10","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\WeeklyWeather.js":"11"},{"size":267,"mtime":1607348910253,"results":"12","hashOfConfig":"13"},{"size":134,"mtime":1607351263160,"results":"14","hashOfConfig":"13"},{"size":94,"mtime":1607337724726,"results":"15","hashOfConfig":"13"},{"size":317,"mtime":1607352260847,"results":"16","hashOfConfig":"13"},{"size":325,"mtime":1607337672389,"results":"17","hashOfConfig":"13"},{"size":49,"mtime":1607349284379,"results":"18","hashOfConfig":"13"},{"size":181,"mtime":1607353227270,"results":"19","hashOfConfig":"13"},{"size":1406,"mtime":1607437304853,"results":"20","hashOfConfig":"13"},{"size":651,"mtime":1607352997230,"results":"21","hashOfConfig":"13"},{"size":2725,"mtime":1607439922538,"results":"22","hashOfConfig":"13"},{"size":1223,"mtime":1607431932816,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"axtfdh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\index.js",[],["50","51"],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\App.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\hooks\\index.js",[],["52","53"],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\hooks\\useInput.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\hooks\\useLocalStorage.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\pages\\index.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\index.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\CurrentWeather.js",["54"],"import React from 'react';\r\nimport { format } from 'date-fns';\r\nimport { ru } from 'date-fns/locale';\r\n\r\nexport default function CurrentWeather({ currentWeather }) {\r\n  const currentDay = format(new Date(), 'EEEE d MMMM', { locale: ru });\r\n  const icon = `http://openweathermap.org/img/wn/${currentWeather?.weather[0]?.icon}@2x.png`;\r\n\r\n  return (\r\n    <div className=\"weather-current\">\r\n      <div className=\"weather-current__col\">\r\n        <div className=\"weather-current__city\">{currentWeather?.name}</div>\r\n        <div className=\"weather-current__day\">{currentDay}</div>\r\n        <div className=\"weather-current__box\">\r\n          <div className=\"weather-current__image\">\r\n            <img src={icon} />\r\n            <p>{currentWeather?.weather[0]?.description}</p>\r\n          </div>\r\n          <div className=\"weather-current__temp\">\r\n            {Math.ceil(currentWeather?.main?.temp)} &#176;\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"weather-current__col\">\r\n        <div>\r\n          <span>Вероятность осадков: </span>\r\n          {currentWeather?.clouds?.all} %\r\n        </div>\r\n        <div>\r\n          <span>Влажность: </span>\r\n          {currentWeather?.main?.humidity} %\r\n        </div>\r\n        <div>\r\n          <span>Ветер: </span>\r\n          {currentWeather?.wind?.speed} км/ч\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\SearchInput.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\pages\\Weather.js",[],"C:\\Users\\office-prog61\\Desktop\\React\\weather\\src\\components\\WeeklyWeather.js",["55"],"import React from 'react';\r\nimport { format, fromUnixTime } from 'date-fns';\r\n\r\nexport default function WeeklyWeather({ weeklyWeather }) {\r\n  const checkCurrentDay = (date) => {\r\n    // const currentDay = format(new Date(), 'd.MM.yyyy');\r\n    // const convertDate = format(fromUnixTime(date), 'd.MM.yyyy');\r\n\r\n    // if (currentDay === convertDate) {\r\n    //   return format(fromUnixTime(date), 'HH:mm');\r\n    // } else {\r\n    //   return format(fromUnixTime(date), 'dd.MM HH:mm');\r\n    // }\r\n    return format(fromUnixTime(date), 'dd.MM HH:mm');\r\n  };\r\n\r\n  const showIcon = (iconId) => {\r\n    const icon = `http://openweathermap.org/img/w/${iconId}.png`;\r\n    return <img src={icon} />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"weather-weekly\">\r\n      {weeklyWeather?.list.map((item, key) => (\r\n        <div className=\"weather-weekly__item\" key={key}>\r\n          <div className=\"weather-weekly__time\">{checkCurrentDay(item.dt)}</div>\r\n          <div className=\"weather-weekly__icon\">{showIcon(item.weather[0].icon)}</div>\r\n          <div className=\"weather-weekly__temp\">{Math.round(item.main.temp)} &#176;</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nWeeklyWeather.defaultProps = {\r\n  weeklyWeather: {},\r\n};\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":16,"column":13,"nodeType":"64","endLine":16,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":19,"column":12,"nodeType":"64","endLine":19,"endColumn":30},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]